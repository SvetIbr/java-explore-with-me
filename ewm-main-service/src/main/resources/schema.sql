drop table if exists events_compilations;
drop table if exists comments;
drop table if exists requests;
drop table if exists events;
drop table if exists compilations;
drop table if exists categories;
drop table if exists users;


CREATE TABLE IF NOT EXISTS users (
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY       NOT NULL,
    name  VARCHAR(250)                                              NOT NULL,
    email VARCHAR(254) UNIQUE                                       NOT NULL
    );

CREATE TABLE IF NOT EXISTS categories (
    id   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY   NOT NULL,
    name VARCHAR(50) UNIQUE                                 NOT NULL
    );

CREATE TABLE IF NOT EXISTS compilations (
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY  NOT NULL,
    pinned BOOLEAN                                              NOT NULL,
    title  VARCHAR(50)                                          NOT NULL
);

CREATE TABLE IF NOT EXISTS events (
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY  NOT NULL,
    annotation         TEXT                                                 NOT NULL,
    category_id        BIGINT                                               NOT NULL,
    confirmed_requests INT                                                  NOT NULL,
    description        TEXT                                                 NOT NULL,
    created            TIMESTAMP                                            NOT NULL,
    event_date         TIMESTAMP                                            NOT NULL,
    published          TIMESTAMP,
    paid               BOOLEAN                                              NOT NULL,
    participant_limit  INT                                                  NOT NULL,
    request_moderation BOOLEAN                                              NOT NULL,
    title              VARCHAR                                              NOT NULL,
    initiator_id       BIGINT                                               NOT NULL,
    lat                FLOAT                                                NOT NULL,
    lon                FLOAT                                                NOT NULL,
    state              VARCHAR(10)                                          NOT NULL,
    CONSTRAINT events_users_fk FOREIGN KEY (initiator_id) REFERENCES users (id),
    CONSTRAINT events_categories_fk FOREIGN KEY (category_id) REFERENCES categories (id)
    );

CREATE TABLE IF NOT EXISTS requests (
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY    NOT NULL,
    event_id     BIGINT                                                 NOT NULL,
    created      TIMESTAMP                                              NOT NULL,
    requester_id BIGINT                                                 NOT NULL,
    status       VARCHAR(15)                                            NOT NULL,
    CONSTRAINT requests_users_fk FOREIGN KEY (requester_id) REFERENCES users (id),
    CONSTRAINT requests_events_fk FOREIGN KEY (event_id) REFERENCES events (id)
    );


CREATE TABLE IF NOT EXISTS events_compilations (
    event_id       BIGINT       NOT NULL,
    compilation_id BIGINT       NOT NULL,
    PRIMARY KEY (compilation_id, event_id),
    CONSTRAINT events_compilations_fk FOREIGN KEY (event_id)
            REFERENCES events (id) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT compilations_events_fk FOREIGN KEY (compilation_id)
            REFERENCES compilations (id) ON UPDATE CASCADE ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS comments (
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY    NOT NULL,
    text         TEXT                                                   NOT NULL,
    author_id    BIGINT                                                 NOT NULL,
    event_id     BIGINT                                                 NOT NULL,
    created      TIMESTAMP                                              NOT NULL,
    changed      BOOLEAN                                               ,
    blocked      BOOLEAN                                                ,
    CONSTRAINT comments_users_fk FOREIGN KEY (author_id) REFERENCES users (id) ON UPDATE CASCADE,
    CONSTRAINT comments_events_fk FOREIGN KEY (event_id) REFERENCES events (id) ON UPDATE CASCADE
    );